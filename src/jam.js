/* Generated using the Jam builder. Get your build at https://jgames101.github.io/jam */
    jam={"version":0,"v":0,"features":["e","localStorage.getObject","sessionStorage.getObject","localStorage.setObject","sessionStorage.setObject","include","include.JS","include.CSS","include.prototype",".jam",".jmss","jam.supports","elem","elem()","HTML.elementify","HTML.stringify","new text()","text()","text"],"supports":function(feature){return jam.features.includes(feature)},};Array.prototype.remove=function(string){if(this.includes(string)){let index=this.indexOf(string);this.splice(index,1)}else{return new Error('Array does not contain string.')}};localStorage.__proto__.setObject = function(name, value) {return sessionStorage.setItem(name, JSON.stringify(value));};localStorage.__proto__.getObject = function(name) {return JSON.parse(sessionStorage.getItem(name));};sessionStorage.__proto__.setObject = function(name, value) {return localStorage.setItem(name, JSON.stringify(value));};sessionStorage.__proto__.getObject = function(name) {return JSON.parse(localStorage.getItem(name));};jam.text=class text{constructor(text){this.elem=document.createElement('span');this.elem.innerText=text;return this.elem}};text=jam.text;elem=class elem{constructor(type,attributes){this.elem=document.createElement(type);if(attributes!=undefined){var attrNames=Object.keys(attributes);for(let i=0;i<attrNames.length;i++){if(attrNames[i]=='children'){for(let j=0;j<attributes[attrNames[i]].length;j++){this.elem.appendChild(attributes[attrNames[i]][j])}}else{this.elem[attrNames[i]]=attributes[attrNames[i]]}}};return this.elem}};elem.prototype=Element.prototype;Element.prototype.addClass=function(newClass){this.classList.add(newClass);return this};Element.prototype.removeClass=function(theClass){this.classList.remove(theClass);return this};Element.prototype.class=function(newClass){this.className=newClass;return this};Element.prototype.give=function(children){var stuff={};if(children.length>1){for(let i=0;i<children.length;i++){this.appendChild(children[i]);if(children[i].id!=""){stuff[children[i].id]=children[i]}else{stuff[children[i].tagName]=children[i]}}}else{this.appendChild(children);this[children.tagName]=children}};jam.e=function(selector){if(document.querySelectorAll(selector).length==1){return document.querySelector(selector)}else if(document.querySelectorAll(selector).length==0){console.error('[JAM] Element '+selector+' does not exist.');return undefined}else{return document.querySelectorAll(selector)}};e=jam.e;Element.prototype.e=jam.e;jam.get=function(url){return new Promise(function(resolve,reject){var xmlhttp=new XMLHttpRequest();xmlhttp.onreadystatechange=function(){if(xmlhttp.readyState==XMLHttpRequest.DONE){if(xmlhttp.status==200){resolve(xmlhttp.responseText)}else{reject('error '+xmlhttp.status)}}};xmlhttp.open("GET",url,!0);xmlhttp.send()})};get=jam.get;jam.HTML={"elementify":function(string){let _cont=document.createElement('div');_cont.innerHTML=string;if(_cont.childNodes.length==1){return _cont.childNodes[0]}else{return _cont.childNodes}},"stringify":function(element){let _cont=document.createElement('div');let _elem=element.cloneNode(!0);_cont.appendChild(_elem);return _cont.innerHTML}};HTML=jam.HTML;